name: scrape-twitter-topics

on:
  workflow_dispatch:
    inputs:
      topics:
        description: "Comma-separated topics (e.g., vote chori, stock market)"
        required: false
        default: "vote chori, stock market"
      lang:
        description: "Language filter"
        required: false
        default: "en"
      days:
        description: "Lookback days"
        required: false
        default: "2"
      limit:
        description: "Max tweets"
        required: false
        default: "800"
  schedule:
    - cron: "0 * * * *"   # hourly

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create/switch to data-cache branch
        run: |
          git checkout data-cache || git checkout -b data-cache

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install "snscrape==0.7.0.20230622" pandas

      - name: Debug env
        run: |
          python -V
          pip -V
          python - << 'PY'
import snscrape, pandas
print("snscrape OK", snscrape.__version__)
print("pandas OK", pandas.__version__)
PY

      - name: Run scrape
        run: |
          python scrape.py \
            --topics "${{ github.event.inputs.topics || 'vote chori, stock market' }}" \
            --lang "${{ github.event.inputs.lang || 'en' }}" \
            --days "${{ github.event.inputs.days || '2' }}" \
            --limit "${{ github.event.inputs.limit || '800' }}" \
            --outdir data

      - name: List outputs
        run: ls -lh data || true

      - name: Commit and push data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.csv || true
          git commit -m "Update scraped CSVs [skip ci]" || echo "Nothing to commit"
          git pull --rebase origin data-cache || true
          git push origin HEAD:data-cache

