name: scrape-twitter-topics

on:
  workflow_dispatch:
    inputs:
      topics:
        description: "Comma-separated topics"
        required: false
        default: "vote chori, stock market"
      lang:
        description: "Language (en/hi/blank)"
        required: false
        default: "en"
      days:
        description: "Lookback days"
        required: false
        default: "2"
      limit:
        description: "Max tweets"
        required: false
        default: "800"
  schedule:
    - cron: "0 * * * *"   # hourly

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify script exists at repo root
        run: |
          ls -la
          test -f scrape.py || (echo "scrape.py not found at repo root" && exit 1)

      - name: Set defaults from inputs
        run: |
          echo "TOPICS=${{ github.event.inputs.topics }}" >> $GITHUB_ENV
          echo "LANG=${{ github.event.inputs.lang }}" >> $GITHUB_ENV
          echo "DAYS=${{ github.event.inputs.days }}" >> $GITHUB_ENV
          echo "LIMIT=${{ github.event.inputs.limit }}" >> $GITHUB_ENV
          echo 'TOPICS=${TOPICS:-vote chori, stock market}' >> $GITHUB_ENV
          echo 'LANG=${LANG:-en}' >> $GITHUB_ENV
          echo 'DAYS=${DAYS:-2}' >> $GITHUB_ENV
          echo 'LIMIT=${LIMIT:-800}' >> $GITHUB_ENV

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "snscrape==0.7.0.20230622" pandas

      - name: Debug environment
        run: |
          python -V
          pip -V
          python -c "import snscrape, pandas; print('snscrape OK'); print('pandas OK', pandas.__version__)"

      - name: Run scrape on default branch
        run: |
          python scrape.py \
            --topics "${TOPICS}" \
            --lang "${LANG}" \
            --days "${DAYS}" \
            --limit "${LIMIT}" \
            --outdir data

      - name: Stage outputs aside
        run: |
          ls -lh data || true
          mkdir -p /tmp/out
          cp -r data /tmp/out/data

      - name: Switch to or create data-cache branch
        run: |
          git fetch origin data-cache || true
          git checkout data-cache || git checkout -b data-cache

      - name: Copy outputs into data-cache and push
        run: |
          mkdir -p data
          cp -r /tmp/out/data/* data/ || true
          ls -lh data || true
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.csv || true
          git commit -m "Update scraped CSVs [skip ci]" || echo "Nothing to commit"
          git pull --rebase origin data-cache || true
          git push origin HEAD:data-cache
